#include <ncurses.h>
#include <unistd.h>
/*盤面*/
int fild[8][8] = {0};

void show(){
    int i,j;
    printf("  0 1 2 3 4 5 6 7 \n");
    for (i = 0; i < 8; i++){
        printf("%d",i);
        for(j = 0;j < 8;j++){
           if(fild[i][j] == 1){
               printf("黒");
           }else if(fild[i][j] == 2){
               printf("白");
           }else if(fild[i][j] == 0){
               printf("□");
           }
    }
    printf("\n");
    }
}

void hanten(int a,int b,int c){
    int i,j,k,ta = a,tb = b;
    int enda,endb;
    int d;
    int flag = 0;
    fild[a][b] = c;
    if (c == 1){
        d = c + 1;
    } else { 
        d = c - 1; 
    }

       /*上*/
    show();
       while(fild[--ta][tb] == d){
          enda = ta - 1;
          if(fild[enda][tb] == 0 || enda > 8 || enda < 0 || tb > 8 || tb < 0){
            flag = 1;
            break;
          }
       }
       if(flag == 0){
          for(j = ta+1;j < a;j++){
              fild[j][tb] = c;
          }
       }
       flag = 0;
       /*下*/

       ta = a;
       tb = b;
       while(fild[++ta][tb] == d){
          enda = ta + 1;
          if(fild[enda][tb] == 0 || enda > 8 || enda < 0 || tb > 8 || tb < 0){
            flag = 1;
            break;
          }
       }
       if(flag == 0){
          for(j = ta-1;j > a;j--){
              fild[j][tb] = c;
          }
       }
       flag = 0;

        /*左*/
       ta = a;
       tb = b;
       while(fild[ta][--tb] == d){
          endb = tb - 1;
          if(fild[ta][endb] == 0 || ta > 8 || ta < 0 || endb > 8 || endb < 0){
            flag = 1;
            break;
          }
       }
       if(flag == 0){
          for(j = tb+1;j < b;j++){
              fild[ta][j] = c;
          }
       }
       flag = 0;

       /*右*/
       ta = a;
       tb = b;
       while(fild[ta][++tb] == d){
          endb = tb + 1;
          if(fild[ta][endb] == 0 || ta > 8 || ta < 0 || endb > 8 || endb < 0){
            flag = 1;
            break;
          }
       }
       if(flag == 0){
          for(j = tb-1;j > b;j--){
              fild[ta][j] = c;
          }
       }
       flag = 0;

       /*右上*/
       ta = a;
       tb = b;
       while(fild[--ta][++tb] == d){
          enda = ta - 1;
          endb = tb + 1;
          if(fild[enda][endb] == 0 || enda > 8 || enda < 0 || endb > 8 || endb < 0){
            flag = 1;
            break;
          }
       }
       if(flag == 0){
          for(j = ta + 1,k = tb - 1;j < a,k > b;j++,k--){
              fild[j][k] = c;
          }
       }
       flag = 0;

       /*左上*/
       ta = a;
       tb = b;
       while(fild[--ta][--tb] == d){
          enda = ta - 1;
          endb = tb - 1;
          if(fild[enda][endb] == 0 || enda > 8 || enda < 0 || endb > 8 || endb < 0){
            flag = 1;
            break;
          }
       }
       if(flag == 0){
          for(j = ta + 1,k = tb + 1;j < a,k < b;j++,k++){
              fild[j][k] = c;
          }
       }
       flag = 0;

       /*左下*/
       ta = a;
       tb = b;
       while(fild[++ta][--tb] == d){
          enda = ta + 1;
          endb = tb - 1;
          if(fild[enda][endb] == 0 || enda > 8 || enda < 0 || endb > 8 || endb < 0){
            flag = 1;
            break;
          }
       }
       if(flag == 0){
          for(j = ta - 1,k = tb + 1;j > a,k < b;j--,k++){
              fild[j][k] = c;
          }
       }
       flag = 0;

       /*右下*/
       ta = a;
       tb = b;
       while(fild[++ta][++tb] == d){
          enda = ta + 1;
          endb = tb + 1;
          if(fild[enda][endb] == 0 || enda > 8 || enda < 0 || endb > 8 || endb < 0){
            flag = 1;
            break;
          }
       }
       if(flag == 0){
          for(j = ta - 1,k = tb - 1;j > a,k > b;j--,k--){
              fild[j][k] = c;
          }
       }
       flag = 0;

}

int kakunin(int a,int b,int c){
     int ta = a,tb = b;
    int enda,endb;
    int d;
    if(fild[a][b] != 0){ /*元々置いている場所に駒を置けないようにする*/
        return 0;
    }

    if (c == 1){
        d = c + 1;
    } else { 
        d = c - 1; 
    }
        /*上*/ 
       while(fild[--ta][tb] == d){
          enda = ta - 1;
          if(fild[enda][tb] == 0 || enda > 8 || enda < 0 || tb > 8 || tb < 0){
            break;
          }
       }

       if(fild[ta][tb] == c && a-ta!=1){/*上一つだけなら置かない(a(置く場所)-ta（挟む先の場所）は駒の距離を示す)*/
            return 1;
        }
    
       ta = a;
       tb = b;

       /*下*/
       while(fild[++ta][tb] == d){
          enda = ta + 1;
          if(fild[enda][tb] == 0 || enda > 8 || enda < 0 || tb > 8 || tb < 0){
            break;
          }
       }
       if(fild[ta][tb] == c && ta-a!=1){
            return 1;
          }
        /*左*/
       ta = a;
       tb = b;
       while(fild[ta][--tb] == d){
          endb = tb - 1;
          if(fild[ta][endb] == 0 || ta > 8 || ta < 0 || endb > 8 || endb < 0){
            break;
          }
       }
       if(fild[ta][tb] == c && b-tb!=1){
            return 1;
          }

       /*右*/
       ta = a;
       tb = b;
       while(fild[ta][++tb] == d){
          endb = tb + 1;
          if(fild[ta][endb] == 0 || ta > 8 || ta < 0 || endb > 8 || endb < 0){
            break;
          }
       }
       if(fild[ta][tb] == c && tb-b!=1){
            return 1;
        }
       /*右上*/
       ta = a;
       tb = b;
       while(fild[--ta][++tb] == d){
          enda = ta - 1;
          endb = tb + 1;
          if(fild[enda][endb] == 0 || enda > 8 || enda < 0 || endb > 8 || endb < 0){ 
            break;
          }
       }
       if(fild[ta][tb] == c && a-ta!=1 && tb-b!=1){
            return 1;
        }

       /*左上*/
       ta = a;
       tb = b;
       while(fild[--ta][--tb] == d){
          enda = ta - 1;
          endb = tb - 1;
          if(fild[enda][endb] == 0 || enda > 8 || enda < 0 || endb > 8 || endb < 0){
            break;
          }
        }
        if(fild[ta][tb] == c && a-ta!=1 && b-tb!=1){
            return 1;
        }

       /*左下*/
       ta = a;
       tb = b;
       while(fild[++ta][--tb] == d){
          enda = ta + 1;
          endb = tb - 1;
          if(fild[enda][endb] == 0 || enda > 8 || enda < 0 || endb > 8 || endb < 0){
            break;
          }
       }
       if(fild[ta][tb] == c && ta-a!=1 && b-tb!=1){
            return 1;
        }

       /*右下*/
       ta = a;
       tb = b;
       while(fild[++ta][++tb] == d){
          enda = ta + 1;
          endb = tb + 1;
          if(fild[enda][endb] == 0 || enda > 8 || enda < 0 || endb > 8 || endb < 0){
            break;
          }
       }
       if(fild[ta][tb] == c && ta-a!=1 && tb-b!=1){
            return 1;
        }
    return 0;/*置ける場所でひっくり返せない時*/
}

int pass(int c){
    int i,j;
    for(i = 0;i < 8;i++){
        for(j = 0;j < 8;j++){
            if(kakunin(i,j,c)==1){
               return 1;
            }
        }
    }
    return 0;
}

void win(){
    int i,j,cnt1=0,cnt2=0;
    for(i = 0;i < 8;i++){
        for(j = 0;j < 8;j++){
            if(fild[i][j]==1){
                 cnt1++;
            }
            if(fild[i][j]==2){
                 cnt2++;
            }
        }
    }
    printf("黒%d枚 白%d枚",cnt1,cnt2);
    if(cnt1 > cnt2){
      printf("黒win!!!");
    }else if(cnt1 == cnt2){
      printf("同点");
    }else{
      printf("白win!!!");
    }
}

int main(void){
    int i=0,cnt = 0;
    int a,b,c;
    fild[3][3] = 1; /*黒*/
    fild[3][4] = 2; /*白*/
    fild[4][3] = 2;
    fild[4][4] = 1;

    show();

    while(1){
        if(i%2 == 0){
            printf("黒のターン");
        }else{
            printf("白のターン");
        }
        if(pass(i%2+1)==0){
            printf("パスします\n");
            cnt++;
            if(cnt==2){
                break;
            }else{
                i++;
                continue;
            }
        }

        scanf("%d %d",&a,&b);
        if(kakunin(a,b,i%2+1)==1){
           hanten(a,b,i%2+1);
        }else{
            printf("置くことができません\n");
            i--;
        }
        show();
        i++;
    }
    win();
    printf("お終わり\n");
        return 0;
}
